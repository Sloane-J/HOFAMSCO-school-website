---
// Button.astro - Reusable button component
// Features: Multiple variants, sizes, states, accessibility, icons, loading states

export interface Props {
  // Button Variants
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger' | 'success' | 'whatsapp' | 'link';

  // Button Sizes
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';

  // Button States
  disabled?: boolean;
  loading?: boolean;
  active?: boolean;

  // Button Types
  type?: 'button' | 'submit' | 'reset';

  // Navigation
  href?: string;
  target?: '_blank' | '_self' | '_parent' | '_top';
  rel?: string;

  // Icons
  icon?: string;
  iconPosition?: 'left' | 'right';
  iconOnly?: boolean;

  // Visual Options
  rounded?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | 'full';
  shadow?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
  fullWidth?: boolean;

  // Animation
  animate?: boolean;
  animationType?: 'bounce' | 'pulse' | 'scale' | 'shake';

  // Accessibility
  ariaLabel?: string;
  ariaDescribedBy?: string;
  tabIndex?: number;

  // Custom Classes
  class?: string;

  // Events (for client-side handling)
  onClick?: string;
  id?: string;
}

const {
  variant = 'primary',
  size = 'md',
  disabled = false,
  loading = false,
  active = false,
  type = 'button',
  href,
  target,
  rel,
  icon,
  iconPosition = 'left',
  iconOnly = false,
  rounded = 'md',
  shadow = 'sm',
  fullWidth = false,
  animate = false,
  animationType = 'scale',
  ariaLabel,
  ariaDescribedBy,
  tabIndex,
  class: className = '',
  onClick,
  id
} = Astro.props;

// Base button classes
const baseClasses = [
  'inline-flex',
  'items-center',
  'justify-center',
  'font-semibold',
  'text-center',
  'transition-all',
  'duration-300',
  'focus:outline-none',
  'focus:ring-4',
  'transform',
  'active:scale-95',
  disabled ? 'cursor-not-allowed opacity-50' : 'cursor-pointer',
  fullWidth ? 'w-full' : '',
  animate ? `hover:animate-${animationType}` : ''
];

// Variant styles
const variantStyles = {
  primary: [
    'bg-hofamsco-red-500',
    'hover:bg-hofamsco-red-600',
    'active:bg-hofamsco-red-700',
    'text-white',
    'focus:ring-hofamsco-red-500/50',
    'shadow-hofamsco-red-500/25'
  ],
  secondary: [
    'bg-hofamsco-blue-500',
    'hover:bg-hofamsco-blue-600',
    'active:bg-hofamsco-blue-700',
    'text-white',
    'focus:ring-hofamsco-blue-500/50',
    'shadow-hofamsco-blue-500/25'
  ],
  outline: [
    'bg-transparent',
    'border-2',
    'border-hofamsco-blue-500',
    'text-hofamsco-blue-600',
    'hover:bg-hofamsco-blue-500',
    'hover:text-white',
    'focus:ring-hofamsco-blue-500/50'
  ],
  ghost: [
    'bg-transparent',
    'text-hofamsco-gray-700',
    'hover:bg-hofamsco-gray-100',
    'active:bg-hofamsco-gray-200',
    'focus:ring-hofamsco-gray-500/50'
  ],
  danger: [
    'bg-red-500',
    'hover:bg-red-600',
    'active:bg-red-700',
    'text-white',
    'focus:ring-red-500/50',
    'shadow-red-500/25'
  ],
  success: [
    'bg-green-500',
    'hover:bg-green-600',
    'active:bg-green-700',
    'text-white',
    'focus:ring-green-500/50',
    'shadow-green-500/25'
  ],
  whatsapp: [
    'bg-green-500',
    'hover:bg-green-600',
    'active:bg-green-700',
    'text-white',
    'focus:ring-green-500/50',
    'shadow-green-500/25'
  ],
  link: [
    'bg-transparent',
    'text-hofamsco-blue-600',
    'hover:text-hofamsco-blue-700',
    'underline',
    'hover:no-underline',
    'focus:ring-hofamsco-blue-500/50',
    'p-0'
  ]
};

// Size classes
const sizeClasses = {
  xs: iconOnly ? 'p-1.5 text-xs' : 'px-2.5 py-1.5 text-xs',
  sm: iconOnly ? 'p-2 text-sm' : 'px-3 py-2 text-sm',
  md: iconOnly ? 'p-2.5 text-base' : 'px-4 py-2.5 text-base',
  lg: iconOnly ? 'p-3 text-lg' : 'px-6 py-3 text-lg',
  xl: iconOnly ? 'p-4 text-xl' : 'px-8 py-4 text-xl'
};

// Rounded classes
const roundedClasses = {
  none: 'rounded-none',
  sm: 'rounded-sm',
  md: 'rounded-md',
  lg: 'rounded-lg',
  xl: 'rounded-xl',
  full: 'rounded-full'
};

// Shadow classes
const shadowClasses = {
  none: '',
  sm: 'shadow-sm hover:shadow-md',
  md: 'shadow-md hover:shadow-lg',
  lg: 'shadow-lg hover:shadow-xl',
  xl: 'shadow-xl hover:shadow-2xl'
};

// Icon size mapping
const iconSizes = {
  xs: 'w-3 h-3',
  sm: 'w-4 h-4',
  md: 'w-5 h-5',
  lg: 'w-6 h-6',
  xl: 'w-7 h-7'
};

// Build final classes
const buttonClasses = [
  ...baseClasses,
  ...variantStyles[variant],
  sizeClasses[size],
  roundedClasses[rounded],
  shadowClasses[shadow],
  active ? 'ring-4' : '',
  className
].filter(Boolean).join(' ');

// Determine if it's a link or button
const isLink = href && !disabled;
const Component = isLink ? 'a' : 'button';

// Common icon rendering function
const renderIcon = (iconName: string, position: 'left' | 'right') => {
  const iconClass = `${iconSizes[size]} ${
    !iconOnly && position === 'left' ? 'mr-2' :
    !iconOnly && position === 'right' ? 'ml-2' : ''
  }`;

  // Common icons mapping
  const iconPaths = {
    // Navigation & Actions
    'arrow-right': 'M5 12h14m-7-7l7 7-7 7',
    'arrow-left': 'M19 12H5m7-7l-7 7 7 7',
    'external-link': 'M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6m4-3h6v6m-11 5L21 3',
    'download': 'M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4m11-4l-4 4m0 0l-4-4m4 4V3',

    // Communication
    'phone': 'M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z',
    'mail': 'M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z',
    'whatsapp': 'M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.570-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488',

    // School & Education
    'book': 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253',
    'academic-cap': 'M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222',
    'users': 'M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a4 4 0 11-8 0 4 4 0 018 0z',

    // Interface
    'plus': 'M12 6v6m0 0v6m0-6h6m-6 0H6',
    'minus': 'M18 12H6',
    'check': 'M5 13l4 4L19 7',
    'x': 'M6 18L18 6M6 6l12 12',
    'search': 'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z',
    'menu': 'M4 6h16M4 12h16M4 18h16',
    'heart': 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z',
    'star': 'M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z',

    // Loading spinner
    'loading': 'M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
  };

  const path = iconPaths[iconName as keyof typeof iconPaths];

  if (iconName === 'whatsapp') {
    return (
      <svg class={iconClass} fill="currentColor" viewBox="0 0 24 24">
        <path d={path}></path>
      </svg>
    );
  }

  if (iconName === 'loading') {
    return (
      <svg class={`${iconClass} animate-spin`} fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d={path}></path>
      </svg>
    );
  }

  return (
    <svg class={iconClass} fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={path}></path>
    </svg>
  );
};
---

{Component === 'a' ? (
  <a
    href={href}
    target={target}
    rel={target === '_blank' ? 'noopener noreferrer' : rel}
    class={buttonClasses}
    aria-label={ariaLabel}
    aria-describedby={ariaDescribedBy}
    tabindex={tabIndex}
    id={id}
  >
    {loading && renderIcon('loading', 'left')}
    {!loading && icon && iconPosition === 'left' && renderIcon(icon, 'left')}
    {!iconOnly && <slot />}
    {!loading && icon && iconPosition === 'right' && renderIcon(icon, 'right')}
  </a>
) : (
  <button
    type={type}
    disabled={disabled || loading}
    class={buttonClasses}
    aria-label={ariaLabel}
    aria-describedby={ariaDescribedBy}
    tabindex={tabIndex}
    onclick={onClick}
    id={id}
  >
    {loading && renderIcon('loading', 'left')}
    {!loading && icon && iconPosition === 'left' && renderIcon(icon, 'left')}
    {!iconOnly && <slot />}
    {!loading && icon && iconPosition === 'right' && renderIcon(icon, 'right')}
  </button>
)}

<style>
  /* Custom button animations */
  @keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
      transform: translate3d(0,0,0);
    }
    40%, 43% {
      transform: translate3d(0,-8px,0);
    }
    70% {
      transform: translate3d(0,-4px,0);
    }
    90% {
      transform: translate3d(0,-2px,0);
    }
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
      transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
      transform: translateX(2px);
    }
  }

  .hover\:animate-bounce:hover {
    animation: bounce 1s infinite;
  }

  .hover\:animate-pulse:hover {
    animation: pulse 1s infinite;
  }

  .hover\:animate-scale:hover {
    transform: scale(1.05);
  }

  .hover\:animate-shake:hover {
    animation: shake 0.5s;
  }

  /* WhatsApp button special styling */
  .whatsapp-button {
    background: linear-gradient(135deg, #25d366 0%, #128c7e 100%);
  }

  .whatsapp-button:hover {
    background: linear-gradient(135deg, #128c7e 0%, #075e54 100%);
  }

  /* Loading state */
  button:disabled {
    pointer-events: none;
  }

  /* Focus ring improvements */
  button:focus-visible,
  a:focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  /* Improved hover states for touch devices */
  @media (hover: hover) {
    button:hover,
    a:hover {
      transform: translateY(-1px);
    }
  }

  /* Mobile-specific optimizations */
  @media (max-width: 768px) {
    button,
    a {
      min-height: 44px; /* iOS touch target size */
      min-width: 44px;
    }
  }
</style>

<script>
  // Enhanced button interactions
  document.addEventListener('DOMContentLoaded', function() {
    // Add ripple effect to buttons
    function createRipple(event) {
      const button = event.currentTarget;
      const circle = document.createElement('span');
      const diameter = Math.max(button.clientWidth, button.clientHeight);
      const radius = diameter / 2;

      circle.style.width = circle.style.height = `${diameter}px`;
      circle.style.left = `${event.clientX - button.offsetLeft - radius}px`;
      circle.style.top = `${event.clientY - button.offsetTop - radius}px`;
      circle.classList.add('ripple');

      const ripple = button.getElementsByClassName('ripple')[0];
      if (ripple) {
        ripple.remove();
      }

      button.appendChild(circle);
    }

    // Add ripple effect to all buttons
    const buttons = document.querySelectorAll('button:not([disabled]), a[role="button"]');
    buttons.forEach(button => {
      button.addEventListener('click', createRipple);
    });

    // Handle WhatsApp buttons
    const whatsappButtons = document.querySelectorAll('[href^="https://wa.me/"], [href^="whatsapp://"]');
    whatsappButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        // Analytics tracking could be added here
        console.log('WhatsApp button clicked');
      });
    });

    // Handle phone buttons
    const phoneButtons = document.querySelectorAll('[href^="tel:"]');
    phoneButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        // Analytics tracking could be added here
        console.log('Phone button clicked');
      });
    });

    // Handle loading states
    const loadingButtons = document.querySelectorAll('button[loading]');
    loadingButtons.forEach(button => {
      button.addEventListener('click', function() {
        this.setAttribute('loading', 'true');
        // Remove loading state after operation completes
        // This would be handled by your application logic
      });
    });
  });

  // CSS for ripple effect
  const rippleStyle = document.createElement('style');
  rippleStyle.textContent = `
    .ripple {
      position: absolute;
      border-radius: 50%;
      transform: scale(0);
      animation: ripple 600ms linear;
      background-color: rgba(255, 255, 255, 0.6);
      pointer-events: none;
    }

    @keyframes ripple {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }

    button {
      position: relative;
      overflow: hidden;
    }
  `;
  document.head.appendChild(rippleStyle);
</script>
